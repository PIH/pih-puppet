#!/bin/bash

echo
echo "Connect to the parent server and retrieve the db"
echo
echo "Set connection variables"

##################################################
PARENT_SERVER=<%= @ssh_parent_address %>
SSH_USER=<%= @ssh_user %>
SSH_KEY=<%= @ssh_key %>
SSH_PORT=<%= @ssh_port %>
SSH_CREDENTIALS="-i $SSH_KEY $SSH_USER@$PARENT_SERVER -p $SSH_PORT"
SCP_CREDENTIALS="-P $SSH_PORT -i $SSH_KEY" 
CONNECT_TO_SERVER="ssh $SSH_CREDENTIALS"
CHILD_NAME=<%= @child_name %>

## SSH_KEY=<%= @ssh_key %>
## GZIP_EXE=<%= @gzip_exe %>
## PLINK_EXE=<%= @plink_exe %>
## PSCP_EXE=<%= @pscp_exe %>
## CONNECT_TO_SERVER=%PLINK_EXE% %SSH_CREDENTIALS%
## SSH_CREDENTIALS=-i %SSH_KEY% -P %SSH_PORT% %SSH_USER%@%PARENT_SERVER%

##################################################
echo "Db connection properties"
##################################################
MYSQL_EXE=<%= @mysql_exe %>
REMOTE_OPENMRS_DB_USER=<%= @parent_mysql_root_user %>
REMOTE_OPENMRS_DB_PASSWORD=<%= @parent_mysql_db_password %>
LOCAL_OPENMRS_DB_USER=<%= @mysql_root_user %>
LOCAL_OPENMRS_DB_PASSWORD=<%= @mysql_root_password %>
OPENMRS_DB=<%= @openmrs_db %>
OPENMRS_DB_REMOTE=<%= @openmrs_db_remote %>
REMOTE_DB_CREDENTIALS="-u $REMOTE_OPENMRS_DB_USER -p$REMOTE_OPENMRS_DB_PASSWORD $OPENMRS_DB_REMOTE"
LOCAL_DB_CREDENTIALS="-u $LOCAL_OPENMRS_DB_USER -p$LOCAL_OPENMRS_DB_PASSWORD"
REMOTE_DB_CONNECTION="mysql $REMOTE_DB_CREDENTIALS"
DROP_AND_CREATE_DB_SCRIPT=<%= @openmrs_drop_create_db_sql %>
DELETE_SYNC_TABLES_DB_SCRIPT=<%= @delete_sync_tables_sql %>
UPDATE_CHILD_SERVER_DB_SCRIPT=<%= @update_child_server_settings_sql %>
UPDATE_PARENT_SERVER_DB_SCRIPT=<%= @update_parent_server_settings_sql %>
SERVER_UUID_TEXT_FILE=<%= @server_uuid_text_file %>
LOCAL_OPENMRS_MODULES=<%= @pih_openmrs_modules %>
LOCAL_OPENMRS_WAR=<%= @pih_openmrs_war %>
LOGFILE=sync.log
SUDOLOGFILE=sudo.log
TOMCAT_STOP="sudo service tomcat6 stop"
TOMCAT_START="sudo service tomcat6 start"

echo sanity checks for local uncommitted sync_records
$MYSQL_EXE $LOCAL_DB_CREDENTIALS $OPENMRS_DB -e "select record_id from sync_record where state <> 'COMMITTED' and state <> 'NOT_SUPPOSED_TO_SYNC';" > $LOGFILE

counter=`wc -l "$LOGFILE" | awk '{print $1'}`
if [ $counter -gt 0 ]
then
echo "$counter Unsynced changes found!"
echo "Please sync changes and retry."
rm $LOGFILE
exit 0
fi
rm $LOGFILE

echo Ensure user can start and stop tomcat6
sudo grep $CHILD_NAME /etc/sudoers > $SUDOLOGFILE
counter=`wc -l "$SUDOLOGFILE" | awk '{print $1'}`
if [ $counter -eq 0 ]
then
sudo sh -c "echo \"$CHILD_NAME ALL=(root) NOPASSWD: /etc/init.d/tomcat6\" >> /etc/sudoers"
fi
rm $SUDOLOGFILE

# Stop tomcat
$TOMCAT_STOP

echo Connect to the parent server
$CONNECT_TO_SERVER exit
$CONNECT_TO_SERVER "ls -al" > /dev/null
if [ $? -ne 0 ] 
then
echo Error Connecting to the parent server 
exit 1
fi

#CONNECT_TO_PARENT_MYSQL
echo Show databases on the remote server
$CONNECT_TO_SERVER "$REMOTE_DB_CONNECTION -e 'show databases;'" > /dev/null
if [ $? -ne 0 ] 
then
echo Error Connecting to the parent MYSQL Server 
exit 1
fi

#CLEAR_PARENT_SYNC_RECORDS
echo *........... Clear sync records on parent server
$CONNECT_TO_SERVER "$REMOTE_DB_CONNECTION -e 'delete from sync_server_record; delete from sync_record; delete from sync_import;'" 
if [ $? -ne 0 ] 
then
echo Error Deleting sync records on parent server 
exit 1
fi

#dump parent DB ===========================================================
echo **........... Dump parent db on parent server
$CONNECT_TO_SERVER "mysqldump $REMOTE_DB_CREDENTIALS -q -e --single-transaction | gzip > /tmp/parent-dump.sql.gz" 
if [ $? -ne 0 ] 
then
echo Error dumping parent db
exit 1
fi

#DOWNLOAD_DB_FROM_PARENT
echo ***.......... Copy db from parent server
scp $SCP_CREDENTIALS $SSH_USER@$PARENT_SERVER:/tmp/parent-dump.sql.gz .
if [ $? -ne 0 ] 
then
echo Error downloading parent db
exit 1
fi

#UNZIP_PARENT_DB
echo ****......... Unzip parent DB
gzip -f -d parent-dump.sql.gz
if [ $? -ne 0 ] 
then
echo Error unzipping parent db
exit 1
fi

#RECREATE_LOCAL_DB
echo *****........ Drop and re-create local DB
$MYSQL_EXE $LOCAL_DB_CREDENTIALS < $DROP_AND_CREATE_DB_SCRIPT 
if [ $? -ne 0 ] 
then
echo Error dropping and recreating local db
exit 1
fi

#SOURCE_LOCAL_DB
echo ******....... Import parent DB
$MYSQL_EXE $LOCAL_DB_CREDENTIALS $OPENMRS_DB < parent-dump.sql 
if [ $? -ne 0 ] 
then
echo Error importing local db
exit 1
fi

#DELETE_LOCAL_SYNC_TABLES
echo *******...... Delete sync tables
$MYSQL_EXE $LOCAL_DB_CREDENTIALS $OPENMRS_DB < $DELETE_SYNC_TABLES_DB_SCRIPT 
if [ $? -ne 0 ] 
then
echo Error dropping sync tables
exit 1
fi

#DOWNLOAD_OPENMRS_MODULES
echo ********..... Delete sync tables
rm $LOCAL_OPENMRS_MODULES/*
scp $SCP_CREDENTIALS $SSH_USER@$PARENT_SERVER:/home/$SSH_USER/modules/* $LOCAL_OPENMRS_MODULES
if [ $? -ne 0 ] 
then
echo Failed to download openmrs modules from parent
exit 1
fi

#DOWNLOAD_OPENMRS_WAR
echo *********.... Download openmrs war from the parent
rm $LOCAL_OPENMRS_WAR
scp $SCP_CREDENTIALS $SSH_USER@$PARENT_SERVER:/home/$SSH_USER/webapps/openmrs.war $LOCAL_OPENMRS_WAR
if [ $? -ne 0 ] 
then
echo Failed to download openmrs war from parent
exit 1
fi

#START_TOMCAT
echo **********... Start Tomcat openmrs web app
$TOMCAT_START

echo wait 300 seconds for Tomcat to start
ping -c 1 -W 300 192.0.2.2 > /dev/null

#CONFIGURE_CHILD_SETTINGS
echo ***********.. Configure sync child server
$MYSQL_EXE $LOCAL_DB_CREDENTIALS $OPENMRS_DB < $UPDATE_CHILD_SERVER_DB_SCRIPT
if [ $? -ne 0 ] 
then
echo Error configuring child server
exit 1
fi

#UPLOAD_CHILD_SERVER_UUID
echo ************. Upload child server UUID text file to the parent server
scp $SCP_CREDENTIALS $SERVER_UUID_TEXT_FILE $SSH_USER@$PARENT_SERVER:/tmp/
if [ $? -ne 0 ] 
then
echo Error uploading child server uuid text file to parent /tmp/ folder
exit 1
fi

:CONFIGURE_PARENT_SETTINGS
rem configure sync parent server ===========================================================
echo ************* Configure sync parent server
$CONNECT_TO_SERVER "$REMOTE_DB_CONNECTION" < $UPDATE_PARENT_SERVER_DB_SCRIPT
if [ $? -ne 0 ] 
then
echo Error uploading child server uuid text file to parent /tmp/ folder
exit 1
fi

echo Cleaning up...
rm $SERVER_UUID_TEXT_FILE
rm parent-dump.sql

